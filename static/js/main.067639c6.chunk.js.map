{"version":3,"sources":["component/Login/Inputblock.js","component/Login/Login.js","component/Navigation/Navigation.js","component/Messages/Picture.js","component/Messages/Messagebox.js","component/Messages/Messages.js","component/Mail/Mail.js","component/Friends/Friend.js","component/Friends/Friends.js","App.js","reportWebVitals.js","index.js"],"names":["Inputblock","inputType","onChanges","value","className","htmlFor","type","name","id","onChange","Login","user","route","errorMessage","setRoute","setUser","setErrorMessage","setIsSignedIn","onRouteChange","setCurrentMessage","pastMessages","setPrivateMessage","username","email","password","event","target","prevUser","console","log","onClick","prevCurrentMessage","prevPrivateMessage","senderEmail","test","length","Navigation","isSignedIn","src","alt","width","Picture","source","Messagebox","text","time","i","deletePost","deleteMail","reply","addLike","count","currentUser","includes","substr","join","Messages","currentMessage","setPastMessages","useEffect","message","newArr","counting","filter","currentuser","cols","rows","Date","toLocaleString","map","msg","Mail","privateMessage","privateMessages","setPrivateMessages","recipientEmail","currentIndex","placeholder","prevPrivateMessages","Friend","friend","messageFriend","Friends","friends","newFriend","prompt","newFriends","App","useState","alert","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gVAqBeA,EAlBI,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,UAAUC,EAAqB,EAArBA,UAAUC,EAAW,EAAXA,MACrC,OAEY,sBAAKC,UAAU,aAAf,UACY,uBAAOA,UAAU,aAAaC,QAASJ,EAAvC,SAAmDA,IACnD,uBACAG,UAAU,aACVE,KAAK,OACLC,KAAMN,EACNO,GAAIP,EACJE,MAAOA,EACPM,SAAYP,QC4FzBQ,EAvGD,SAAC,GAAgJ,IAA/IC,EAA8I,EAA9IA,KAAKC,EAAyI,EAAzIA,MAAMC,EAAmI,EAAnIA,aAAaC,EAAsH,EAAtHA,SAASC,EAA6G,EAA7GA,QAASC,EAAoG,EAApGA,gBAAgBC,EAAoF,EAApFA,cAAcC,EAAsE,EAAtEA,cAAeC,EAAuD,EAAvDA,kBAAmBC,EAAoC,EAApCA,aAAaC,EAAuB,EAAvBA,kBAE5HC,EAA2BX,EAA3BW,SAASC,EAAkBZ,EAAlBY,MAAMC,EAAYb,EAAZa,SAEhBtB,EAAW,SAACuB,GACd,OAAQA,EAAMC,OAAOlB,IACnB,IAAK,OACHO,GAAQ,SAACY,GACL,OAAO,2BAAIA,GAAX,IAAoBL,SAASG,EAAMC,OAAOvB,WAC9C,MACF,IAAK,QACHY,GAAQ,SAACY,GACL,OAAO,2BAAIA,GAAX,IAAoBJ,MAAME,EAAMC,OAAOvB,WAC3C,MACF,IAAK,WACHY,GAAQ,SAACY,GACL,OAAO,2BAAIA,GAAX,IAAoBH,SAASC,EAAMC,OAAOvB,WAC9C,MACA,QACIyB,QAAQC,IAAIJ,EAAMC,OAAOvB,SAyCrC,OAEI,gCACA,qBAAKC,UAAU,YAAf,SACI,0BAASA,UAAU,aAAnB,UAEc,aAARQ,EAEE,qCACA,oBAAIR,UAAU,SAAd,sBACA,cAAC,EAAD,CAAYH,UAAa,OAAQE,MAAOmB,EAAUpB,UAAYA,IAC9D,cAAC,EAAD,CAAYD,UAAa,QAASE,MAASoB,EAAOrB,UAAYA,IAC9D,cAAC,EAAD,CAAYD,UAAa,WAAYE,MAAOqB,EAAUtB,UAAYA,OAGlE,qCACA,oBAAIE,UAAU,SAAd,qBACA,cAAC,EAAD,CAAYH,UAAa,QAASE,MAAOoB,EAAOrB,UAAYA,IAC5D,cAAC,EAAD,CAAYD,UAAa,WAAYE,MAAOqB,EAAUtB,UAAYA,OAKtE,qBAAKE,UAAU,GAAf,SACI,wBAAQE,KAAO,SAASF,UAAY,SAAS0B,QA9B1C,WACP,YAARlB,GA/BAE,EAAS,QACTG,GAAc,GACdW,QAAQC,IAAIlB,GACZQ,GAAkB,SAACY,GACjB,OAAO,2BAAIA,GAAX,IAA8BR,MAAMA,OACtCF,GAAkB,SAACW,GACjB,OAAO,2BAAIA,GAAX,IAA8BC,YAAYV,SAKvB,eACAW,KAAKX,IAAUC,EAASW,QAAQ,IAC/CrB,EAAS,QACTG,GAAc,GACdE,GAAkB,SAACY,GACjB,OAAO,2BAAIA,GAAX,IAA8BT,SAASA,OAE3CH,GAAkB,SAACY,GACjB,OAAO,2BAAIA,GAAX,IAA8BR,MAAMA,OACpCK,QAAQC,IAAIT,IAGXI,EAASW,OAAO,EACjBnB,EAAgB,sCAEhBA,EAAgB,iCAkCV,sBAIJ,qBAAKZ,UAAU,GAAf,SACa,YAARQ,EACA,mBAAGkB,QAAW,kBAAMZ,EAAc,aAAYd,UAAU,YAAxD,sBACA,mBAAG0B,QAAW,kBAAMZ,EAAc,YAAYd,UAAU,YAAxD,4BAMb,8BAAMS,QC1DCuB,G,MAvCI,SAAC,GAAqC,IAApClB,EAAmC,EAAnCA,cAAemB,EAAoB,EAApBA,WAAWzB,EAAS,EAATA,MAC3C,OAAIyB,EAEI,gCACa,SAARzB,EACA,qBAAKR,UAAY,UAAjB,SACD,mBAAG0B,QAAW,kBAAMZ,EAAc,SAAlC,SAA2C,qBAAKoB,IAAM,kCAAkCC,IAAI,OAAOC,MAAQ,cAE1G,qBAAKpC,UAAY,UAAjB,SACD,mBAAG0B,QAAW,kBAAMZ,EAAc,SAAlC,SAA2C,qBAAKoB,IAAM,0BAA0BC,IAAI,OAAOC,MAAQ,cAInG,qBAAKpC,UAAY,gBAAjB,SACI,oBAAIA,UAAY,QAAhB,kCAEJ,qBAAKA,UAAY,MAAjB,SAGA,mBAAG0B,QAAW,kBAAMZ,EAAc,YAAYd,UAAY,aAA1D,2BAOJ,qBAAKA,UAAY,gBAAjB,SACQ,oBAAIA,UAAY,QAAhB,oC,OCnBLqC,G,KATC,SAACC,GAEb,OADAd,QAAQC,IAAIa,GAER,8BACI,qBAAKH,IAAM,UAAUD,IAAOI,EAAOA,OAAQF,MAAQ,cCuDhDG,EAzDI,SAAC,GAA6G,IAA3G/B,EAA0G,EAA1GA,MAAMgC,EAAoG,EAApGA,KAAMtB,EAA8F,EAA9FA,SAAUuB,EAAoF,EAApFA,KAAMC,EAA8E,EAA9EA,EAAGC,EAA2E,EAA3EA,WAAWC,EAAgE,EAAhEA,WAAWC,EAAqD,EAArDA,MAAOC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,YAAYhC,EAAkB,EAAlBA,aAC1G,OACI,qBAAKhB,UAAY,MAAjB,SACI,sBAAKA,UAAY,WAAjB,UAEI,sBAAKA,UAAY,cAAjB,UACA,sBAAKA,UAAY,OAAjB,UACQ,qBAAKA,UAAY,cAAjB,SAAgCwC,EAAKS,SAAS,OAAO,cAAC,EAAD,CAASX,OAAUE,EAAKU,OAAO,EAAEV,EAAKT,OAAO,KAAMS,IACvGhB,QAAQC,IAAIe,EAAKU,OAAO,EAAEV,EAAKT,OAAO,OAE3C,qBAAK/B,UAAY,kBAAjB,SACW,SAAVQ,EACA,8BAAMQ,EAAa0B,GAAGvB,QAAQ6B,EAAY,wBAAQhD,UAAY,eAAeI,GAAMsC,EAAGhB,QAAW,kBAAIiB,EAAWD,IAAtE,eAAqF,+BAGvH,8BAAK,wBAAQ1C,UAAY,eAAeI,GAAMsC,EAAGhB,QAAWkB,EAAvD,sBAOlB,wBAIA,sBAAK5C,UAAY,OAAjB,UAEI,4BAAKkB,IACL,mBAAGlB,UAAU,OAAb,SAAsByC,EAAKS,OAAO,EAAE,SAEjC1B,QAAQC,IAAIjB,GACnB,sBAAKR,UAAU,QAAf,UACmB,SAAVQ,EAEI,wBAAQR,UAAY,aAAa0B,QAAW,kBAAIoB,EAAQJ,IAAxD,SAA8DK,EAAME,SAASD,GAAa,qBAAKd,IAAM,2BAA2BC,IAAI,SAASC,MAAM,UAAe,qBAAKF,IAAM,0BAA0BC,IAAI,OAAOC,MAAQ,YAC1N,wBAAQpC,UAAY,aAAa0B,QAAW,kBAAImB,EAAM3B,IAAtD,mBAKS,SAAVV,EACC,8BAAMuC,EAAMhB,OAAO,EAAb,UAAkBgB,EAAMhB,OAAxB,UAAwCgB,EAAMhB,OAAO,EAAGgB,EAAMhB,OAAO,EAAEgB,EAAMI,KAAK,MAAM,kBAAkBJ,EAAMI,KAAK,SAAS,kBAAoBJ,EAAMhB,OAAOgB,EAAM,mBAAmB,KAC9L,sCC8GdK,EArJE,SAAC,GAA4F,IAA3F7C,EAA0F,EAA1FA,KAAM8C,EAAoF,EAApFA,eAAerC,EAAqE,EAArEA,aAAasC,EAAwD,EAAxDA,gBAAgBvC,EAAwC,EAAxCA,kBAAkB4B,EAAsB,EAAtBA,WAAWnC,EAAW,EAAXA,MAC9F+C,qBAAU,WACuB,KAAzBF,EAAeG,UACfF,EAAgB,GAAD,mBAAKtC,GAAL,CAAkBqC,KACrCtC,GAAkB,SAACY,GACf,OAAO,2BAAIA,GAAX,IAA8B6B,QAAQ,WAI5C,CAACH,EAAeZ,OAgBlB,IA0BMK,EAAU,SAACJ,GAKb,IAAMe,EAAM,YAAOzC,GA0BnB,GAAKyC,EAAOf,GAAGK,MAAME,SAAS1C,GAKzB,CACD,IAAImD,EAAWD,EAAOf,GAAGK,MAAMY,QAAO,SAACC,GAAD,OAAeA,IAAcrD,KACnEkD,EAAOf,GAAP,2BAAce,EAAOf,IAArB,IAAwBK,MAAMW,IAE9BJ,EAAgBG,OATgB,CAChC,IAAIC,EAAQ,sBAAOD,EAAOf,GAAGK,OAAjB,CAAuBxC,IACnCkD,EAAOf,GAAP,2BAAce,EAAOf,IAArB,IAAwBK,MAAMW,IAC9BlC,QAAQC,IAAIiC,GACZJ,EAAgBG,KAgCpB,OACI,sBAAKzD,UAAY,cAAjB,UACA,sBAAKA,UAAY,WAAjB,UACI,uBAAOA,UAAY,WAAW6D,KAAK,KAAKC,KAAK,IAAIzD,SA/EvC,SAACgB,GAEnBN,GAAkB,SAACY,GACf,OAAO,2BAAIA,GAAX,IAA8B6B,QAAQnC,EAAMC,OAAOvB,YA4E6BA,MAASsD,EAAeG,UACpG,wBAAQxD,UAAY,eAAe0B,QAjG9B,WAEbX,GAAkB,SAACY,GACf,OAAO,2BAAIA,GAAX,IAA8Bc,KAAKsB,OAAOC,uBA8FtC,uBAEJ,sBAAKhE,UAAU,iBAAf,UACI,sBAAKA,UAAU,SAAf,UACA,uBAAOG,KAAK,SAASH,UAAY,cAAjC,6BACA,uBAAOG,KAAO,cAEd,8BACCa,EAAaiD,KAAI,SAACC,EAAIxB,GACnB,IAAMM,EAAchC,EAAae,OAAO,EAAEW,EAE1C,OAAO,8BAAK,cAAC,EAAD,CAAY1B,aAAgBA,EAAcgC,YAAezC,EAAMW,SAAYF,EAAagC,GAAa7B,MAAOqB,KAAOxB,EAAagC,GAAaQ,QAASf,KAAQzB,EAAagC,GAAaP,KAAMC,EAAKM,EAAaL,WAAcA,EAAYnC,MAAOA,EAAOsC,QAAWA,EAASC,MAAS/B,EAAagC,GAAaD,eAI9TvB,QAAQC,IAAI,UAAUT,UC/DxBmD,G,MA9EF,SAAC,GAA+F,IAA9FC,EAA6F,EAA7FA,eAAgBnD,EAA6E,EAA7EA,kBAAmBoD,EAA0D,EAA1DA,gBAAiBC,EAAyC,EAAzCA,mBAAoB/D,EAAqB,EAArBA,KAC7ET,GADkG,EAAhB6C,WACvE,SAACtB,GACd,OAAQA,EAAMC,OAAOlB,IACjB,IAAK,iBACDa,GAAkB,SAACW,GACf,OAAO,2BAAIA,GAAX,IAA8B2C,eAAelD,EAAMC,OAAOvB,WAE9D,MACJ,IAAK,cACDkB,GAAkB,SAACW,GACf,OAAO,2BAAIA,GAAX,IAA8B4B,QAAQnC,EAAMC,OAAOvB,cA+B3D6C,EAAa,SAACvB,GAClB,IAAMmD,EAAeH,EAAgBtC,OAAO,EAAEV,EAAMC,OAAOlB,GAE3DkE,EAAmBD,EAAgBV,QAAO,SAACH,GAAD,OAAWA,IAAUa,EAAgBG,QAG3E3B,EAAQ,SAAC1B,GACXK,QAAQC,IAAI,QAAQN,GACtBF,GAAkB,SAACW,GACf,OAAO,2BAAIA,GAAX,IAA8B2C,eAAepD,QAGrD,OACI,sBAAKnB,UAAY,UAAjB,UACI,gCACI,gCACA,uBAAOG,KAAK,KAAZ,gBACJ,uBAAOA,KAAO,KAAKC,GAAG,iBAAiBF,KAAO,OAAOuE,YAAc,cAAcpE,SAAYP,EAAWC,MAASqE,EAAeG,oBAGhI,uBAAOpE,KAAK,OAAZ,qBACA,0BAAUA,KAAO,OAAQC,GAAK,cAAcqE,YAAc,iBAAiBpE,SAAYP,EAAWC,MAASqE,EAAeZ,UAC1H,wBAAQtD,KAAK,SAASwB,QA/Bb,WACX4C,GAAmB,SAACI,GAChB,MAAM,GAAN,mBAAWA,GAAX,CAA+BN,OAEnCnD,GAAkB,SAACW,GACf,OAAO,2BAAIA,GAAX,IAA8BV,SAAS,GAAGqD,eAAe,GAAGf,QAAQ,GAAGf,KAAK,QAChFjB,QAAQC,IAAI4C,IAyBV,qBAGCA,EAAgBJ,KAAI,SAACT,EAAQd,GACtB,IAAMW,EAAiBgB,EAAgBtC,OAAO,EAAEW,EAEhD,GADAlB,QAAQC,IAAI4C,EAAgBhB,GAAgBkB,eAAehE,EAAKY,OAC5DkD,EAAgBhB,GAAgBkB,iBAAmBhE,EAAKY,MACxD,OAAO,8BAAK,cAAC,EAAD,CAAYD,SAAYmD,EAAgBhB,GAAgBxB,YAAaW,KAAO6B,EAAgBhB,GAAgBG,QAASf,KAAQ4B,EAAgBhB,GAAgBZ,KAAMC,EAAKA,EAAGE,WAAcA,EAAYC,MAASA,cC/DnO8B,EATA,SAAC,GAA4B,IAA3BC,EAA0B,EAA1BA,OAAOC,EAAmB,EAAnBA,cAEpB,OADArD,QAAQC,IAAImD,GAER,8BACK,oBAAIlD,QAAW,kBAAImD,EAAcD,IAAjC,SAA2CA,OCwCzCE,G,MA1CC,SAAC,GAA+C,IAA9CvE,EAA6C,EAA7CA,KAAKI,EAAwC,EAAxCA,QAAQM,EAAgC,EAAhCA,kBAAkBP,EAAc,EAAdA,SACvCmE,EAAgB,SAACD,GACnB3D,GAAkB,SAACW,GACf,OAAO,2BAAIA,GAAX,IAA8B2C,eAAeK,OAEjDlE,EAAS,QAETc,QAAQC,IAAI,QAWRsD,EAAYxE,EAAZwE,QACR,OACI,sBAAK/E,UAAU,aAAf,UACI,qBAAKA,UAAU,iBAAf,SAAgC,mBAAGA,UAAU,cAAb,4BACpC,8BACI,+BACKwB,QAAQC,IAAIsD,GACZA,EAAQd,KAAI,SAACW,GACV,OAAO,cAAC,EAAD,CAAQC,cAAiBA,EAAeD,OAAUA,YASrE,wBAAQlD,QAzBM,WACd,IAAMsD,EAAYC,OAAO,2CACnBC,EAAU,sBAAOH,GAAP,CAAeC,IAC/BrE,GAAQ,SAACY,GACL,OAAO,2BAAIA,GAAX,IAAoBwD,QAAQG,QAqBhC,6B,MCyEOC,MArGf,WACE,MAAuBC,mBAAS,CAAClE,SAAS,GAAGC,MAAM,GAAGC,SAAS,GAAG2D,QAAQ,CAAC,qBAA3E,mBAAOxE,EAAP,KAAYI,EAAZ,KACA,EAAyByE,mBAAS,WAAlC,mBAAO5E,EAAP,KAAaE,EAAb,KACA,EAAmC0E,oBAAS,GAA5C,mBAAOnD,EAAP,KAAkBpB,EAAlB,KACA,EAAuCuE,mBAAS,IAAhD,mBAAO3E,EAAP,KAAoBG,EAApB,KAGA,EAAuCwE,mBAAS,IAAhD,mBAAOpE,EAAP,KAAoBsC,EAApB,KACA,EAA4C8B,mBAAS,CAAClE,SAAS,GAAGC,MAAM,GAAGqC,QAAQ,GAAGf,KAAK,GAAGM,MAAM,KAApG,mBAAOM,EAAP,KAAuBtC,EAAvB,KACA,EAA6CqE,mBAAS,IAAtD,mBAAOf,EAAP,KAAuBC,EAAvB,KACA,EAA4Cc,mBAAS,CAAClE,SAAS,GAAGW,YAAY,GAAG0C,eAAe,GAAGf,QAAQ,GAAGf,KAAK,KAAnH,mBAAO2B,EAAP,KAAuBnD,EAAvB,KAiBMH,EAAgB,SAACN,GAEV,SAAVA,GAA6B,SAATA,EAAiBK,GAAc,IAbpDW,QAAQC,IAAIlB,GACZG,EAAS,WACTG,GAAc,GACdF,EAAQ,CAACO,SAAS,GAAGC,MAAM,GAAGC,SAAS,GAAG2D,QAAQ,CAAC,qBACnDnE,EAAgB,IAEhBG,EAAkB,CAACG,SAAS,GAAGC,MAAM,GAAGqC,QAAQ,GAAGf,KAAK,GAAGM,MAAM,KACjE9B,EAAkB,CAACC,SAAS,GAAGW,YAAY,GAAG0C,eAAe,GAAGf,QAAQ,GAAGf,KAAK,MAOhF/B,EAASF,IAILmC,EAAa,SAAC6B,GAElBhD,QAAQC,IAAIT,EAAawD,GAAcrD,OACnCH,EAAawD,GAAcrD,QAAQZ,EAAKY,MAC1CmC,EAAgBtC,EAAa2C,QAAO,SAACH,GAAD,OAAWA,IAAUxC,EAAawD,OAEtEa,MAAM,0CAIV,OACE,sBAAKrF,UAAU,MAAf,UACA,cAAC,EAAD,CAAYc,cAAiBA,EAAemB,WAAcA,EAAYzB,MAAOA,IAE3EyB,EACW,SAARzB,EAED,sBAAKR,UAAY,OAAjB,UAEA,cAAC,EAAD,CAASO,KAAQA,EAAMI,QAAWA,EAASD,SAAYA,EAAUO,kBAAqBA,IACtF,qBAAKjB,UAAY,cAAjB,SACA,cAAC,EAAD,CACIO,KAAQA,EAAKY,MAGbX,MAASA,EACTmC,WAAcA,EACdU,eAAkBA,EAClBtC,kBAAqBA,EACrBC,aAAgBA,EAChBsC,gBAAmBA,SAKvB,sBAAKtD,UAAY,OAAjB,UACA,cAAC,EAAD,CAASO,KAAQA,EAAMI,QAAWA,EAASD,SAAYA,EAAUO,kBAAqBA,IACtF,qBAAKjB,UAAY,cAAjB,SACA,cAAC,EAAD,CAAMO,KAAOA,EAAM6D,eAAkBA,EAAgBnD,kBAAqBA,EAAmBoD,gBAAmBA,EAAiBC,mBAAsBA,EAAoB3B,WAAcA,SAIzL,mCAEA,cAAC,EAAD,CACIpC,KAAQA,EACRC,MAASA,EACTC,aAAgBA,EAChBE,QAAWA,EACXD,SAAYA,EACZE,gBAAmBA,EACnBC,cAAiBA,EACjBC,cAAiBA,EAEjBC,kBAAqBA,EACrBC,aAAgBA,EAChBC,kBAAqBA,UCzFlBqE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.067639c6.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Login.css';\r\n\r\nconst Inputblock = ({inputType,onChanges,value}) => {\r\n    return (\r\n                \r\n                <div className=\"inputBlock\">\r\n                            <label className=\"inputLabel\" htmlFor={inputType}>{inputType}</label>\r\n                            <input \r\n                            className=\"inputField\" \r\n                            type=\"text\" \r\n                            name={inputType}  \r\n                            id={inputType}\r\n                            value={value}\r\n                            onChange = {onChanges}\r\n                            />\r\n                </div>\r\n                \r\n    )\r\n}\r\n\r\nexport default Inputblock;","import React from 'react';\r\nimport Inputblock from './Inputblock';\r\nimport './Login.css'\r\nconst Login = ({user,route,errorMessage,setRoute,setUser, setErrorMessage,setIsSignedIn,onRouteChange, setCurrentMessage, pastMessages,setPrivateMessage}) => {\r\n    \r\n    const {username,email,password} = user;\r\n    \r\n    const onChanges= (event) =>{\r\n        switch (event.target.id){\r\n          case 'Name':\r\n            setUser((prevUser)=>{\r\n                return {...prevUser,username:event.target.value}})\r\n            break;\r\n          case 'Email':\r\n            setUser((prevUser)=>{\r\n                return {...prevUser,email:event.target.value}})\r\n            break;\r\n          case 'Password':\r\n            setUser((prevUser)=>{\r\n                return {...prevUser,password:event.target.value}})\r\n            break;\r\n            default:\r\n                console.log(event.target.value)\r\n        }\r\n      }\r\n    \r\n      const verifyLogin = () => {\r\n        setRoute('home')\r\n        setIsSignedIn(true)\r\n        console.log(user)\r\n        setCurrentMessage((prevCurrentMessage)=>{\r\n          return {...prevCurrentMessage,email:email}})\r\n        setPrivateMessage((prevPrivateMessage)=>{\r\n          return {...prevPrivateMessage,senderEmail:email}})\r\n          // console.log('log',privateMessage)\r\n      }\r\n    \r\n      const verifyRegistration = () => {\r\n        const emailPattern = /\\S+@\\S+\\.\\S+/\r\n            if (emailPattern.test(email) && password.length>=8){\r\n              setRoute('home')\r\n              setIsSignedIn(true)\r\n              setCurrentMessage((prevCurrentMessage)=>{\r\n                return {...prevCurrentMessage,username:username}})\r\n            \r\n            setCurrentMessage((prevCurrentMessage)=>{\r\n              return {...prevCurrentMessage,email:email}})\r\n              console.log(pastMessages)\r\n          }\r\n            \r\n            if(password.length<8){\r\n              setErrorMessage('Password must be 8 characters long')\r\n            }else{\r\n              setErrorMessage('Enter a valid email address')\r\n            }\r\n      }\r\n    \r\n      const onSubmit = () => {\r\n        route==='Sign In'?verifyLogin():verifyRegistration();\r\n    \r\n      }\r\n    \r\n      \r\n    return(\r\n        \r\n        <div>\r\n        <div className=\"container\">\r\n            <article className=\"formWindow\">\r\n    \r\n                {(route===\"Register\"\r\n                    ?\r\n                    <>\r\n                    <h1 className=\"legend\">Register</h1>\r\n                    <Inputblock inputType = {\"Name\"} value={username} onChanges ={onChanges}/>\r\n                    <Inputblock inputType = {\"Email\"} value = {email} onChanges ={onChanges}/>\r\n                    <Inputblock inputType = {\"Password\"} value={password} onChanges ={onChanges}/>\r\n                    </>\r\n                    :\r\n                    <>\r\n                    <h1 className=\"legend\">Sign In</h1>\r\n                    <Inputblock inputType = {\"Email\"} value={email} onChanges ={onChanges}/>\r\n                    <Inputblock inputType = {\"Password\"} value={password} onChanges ={onChanges}/>\r\n\r\n                    </>\r\n                )}\r\n\r\n                <div className=\"\">\r\n                    <button type = \"submit\" className = \"button\" onClick = {onSubmit}>Submit</button>\r\n                    \r\n            \r\n                </div>\r\n                <div className=\"\">\r\n                    {route==='Sign In'\r\n                    ?<p onClick = {() => onRouteChange('Register')}className=\"loginLink\">Register</p>\r\n                    :<p onClick = {() => onRouteChange('Sign In')} className=\"loginLink\">Sign In</p>\r\n                    }\r\n                </div>\r\n            </article>\r\n    \r\n        </div>\r\n        <div>{errorMessage}</div>\r\n    \r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport './Navigation.css';\r\n\r\nconst Navigation = ({onRouteChange, isSignedIn,route})=>{\r\n    if (isSignedIn){\r\n        return (\r\n            <div>\r\n                {route==='home'\r\n                ?<div className = 'navLeft'> \r\n                <p onClick = {() => onRouteChange('mail')}><img src = \"/assets/images/mail-outline.png\" alt=\"Mail\" width = \"30rem\" ></img></p>\r\n                </div>\r\n                :<div className = 'navLeft'> \r\n                <p onClick = {() => onRouteChange('home')}><img src = \"/assets/images/home.png\" alt=\"Home\" width = \"30rem\" ></img></p>\r\n                </div>\r\n                }\r\n              \r\n                <div className = \"headcontainer\">\r\n                    <h1 className = \"title\">SOCIALLY DISTANCED</h1>\r\n                </div>\r\n                <nav className = \"nav\">\r\n                \r\n                \r\n                <p onClick = {() => onRouteChange('Sign In')} className = 'navElement'>Sign Out</p>\r\n            </nav>\r\n            </div>\r\n            \r\n        )\r\n    }else {\r\n        return (\r\n            <div className = \"headcontainer\">\r\n                    <h1 className = \"title\">SOCIALLY DISTANCED</h1>\r\n            </div>\r\n            // <nav className = \"nav\">\r\n            //     <p onClick = {() => onRouteChange('Sign In')} className = 'navElement'>Sign In</p>\r\n            //     <p onClick = {() => onRouteChange('Register')} className = 'navElement'>Register</p>\r\n            // </nav>\r\n        )\r\n            \r\n            \r\n        }\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\n\r\nconst Picture = (source) => {\r\n    console.log(source)\r\n    return (\r\n        <div>\r\n            <img alt = \"picture\" src = {source.source} width = \"200em\"></img>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Picture;","import React from 'react';\r\nimport \"./Message.css\";\r\nimport Picture from './Picture';\r\n\r\nconst Messagebox = ({ route,text, username, time, i, deletePost,deleteMail,reply, addLike, count, currentUser,pastMessages}) => {\r\n    return (\r\n        <div className = \"box\">\r\n            <div className = \"smallbox\">\r\n                {/* {console.log(username,'user')} */}\r\n                <div className = \"messageArea\">\r\n                <div className = \"text\">\r\n                        <div className = \"textmessage\">{text.includes('img')?<Picture source = {text.substr(3,text.length-1)}/>:text}</div>\r\n                        {console.log(text.substr(3,text.length-1))}\r\n                    </div>\r\n                    <div className = \"deleteContainer\">\r\n                    {route === \"home\"\r\n                    ?<div>{pastMessages[i].email===currentUser?<button className = \"deleteButton\" id = {i} onClick = {()=>deletePost(i)}>X</button>:<></>}</div>\r\n                            \r\n                        \r\n                            :<div><button className = \"deleteButton\" id = {i} onClick = {deleteMail}>X</button></div>\r\n                            }\r\n                    </div>\r\n                    \r\n                    \r\n                </div>\r\n                \r\n                <div>\r\n                    \r\n                       \r\n                </div>\r\n                <div className = \"user\">\r\n                    \r\n                    <p >{username}</p>\r\n                    <p className='date'>{ time.substr(0,24) }</p>\r\n                    \r\n                </div>{console.log(route)}\r\n                <div className=\"likes\">\r\n                        {route === 'home'\r\n                            // ?(count.includes(user)?<button onClick = {()=>addLike(i)}>Unlike</button>:<button onClick = {()=>addLike(i)}>Like</button>)\r\n                            ?<button className = \"likeButton\" onClick = {()=>addLike(i)}>{(count.includes(currentUser)?<img src = \"/assets/images/liked.png\" alt=\"Unlike\" width=\"20rem\"></img>:<img src = \"/assets/images/like.png\" alt=\"like\" width = \"20rem\"></img>)}</button>\r\n                            :<button className = \"likeButton\" onClick = {()=>reply(username)}>Reply</button>\r\n                            }\r\n                        \r\n                        {\r\n                            \r\n                            route === 'home'\r\n                            ?<div>{count.length>4?`${count.length} Likes`:(count.length>1?(count.length>2?count.join(', ')+' like this post':count.join(' and ')+' like this post'):(count.length?count+' likes this post':''))}</div>\r\n                            :<></>\r\n                            \r\n                        \r\n                        }\r\n                </div>\r\n                \r\n                \r\n            </div>\r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Messagebox;","import React, {useEffect } from 'react';\r\nimport Messagebox from './Messagebox';\r\nimport './Message.css';\r\n\r\n\r\n\r\n \r\n\r\nconst Messages = ({user, currentMessage,pastMessages,setPastMessages,setCurrentMessage,deletePost,route}) => {\r\n    useEffect(()=>{\r\n        if (currentMessage.message!==''){\r\n            setPastMessages([...pastMessages,currentMessage])\r\n        setCurrentMessage((prevCurrentMessage)=>{\r\n            return {...prevCurrentMessage,message:''}})\r\n        }\r\n        \r\n        // console.log(pastMessages)\r\n    },[currentMessage.time])\r\n\r\n    // useEffect(()=>{\r\n    //     console.log(pastMessages)\r\n    //     setPastMessages(pastMessages)\r\n        // const tempMessages = pastMessages\r\n        // console.log(tempMessages)\r\n        // console.log(pastMessages[pastMessages.length-1])\r\n        // pastMessages[pastMessages.length-1]==={username: \"\", email: \"\", message: \"\", time: \"\"}?\r\n        // setPastMessages([])\r\n        // :console.log(pastMessages)\r\n        // :setPastMessages(pastMessages)\r\n    // },[])\r\n    \r\n    \r\n\r\n    const onSubmit = () => {\r\n        // console.log(currentObject)\r\n        setCurrentMessage((prevCurrentMessage)=>{\r\n            return {...prevCurrentMessage,time:Date().toLocaleString()}})\r\n        // console.log('submit',currentObject)\r\n            \r\n        \r\n        \r\n                \r\n                \r\n            \r\n        \r\n        // console.log(pastObject[3].message)\r\n        // setPastMessages([...pastMessages,<Messagebox user = {username} text ={currentMessage} currentTime = {Date().toLocaleString()} />])\r\n        // setCurrentMessage('')\r\n        \r\n    }\r\n    const onInputChange = (event) => {\r\n        // setCurrentMessage(event.target.value)\r\n        setCurrentMessage((prevCurrentMessage)=>{\r\n            return {...prevCurrentMessage,message:event.target.value}})\r\n            // setCurrentObject((prevCurrentObject)=>{\r\n            //     return {...prevCurrentObject,time:Date().toLocaleString()}})\r\n        \r\n    }\r\n    \r\n    const addLike = (i) => {\r\n        // let x = pastMessages[i].count\r\n        // x.push(user)\r\n        // console.log(x,pastMessages[i])\r\n        // setPastMessages([...pastMessages.slice,pastMessages[i].count=x])\r\n        const newArr = [...pastMessages]\r\n        // setPastMessages(pastMessages.map(object=>{\r\n        //     return (object.count.includes(user)\r\n        //     ?{...object,count:object.count.filter((username)=>username!==user)}\r\n        //     :{...object,count:object.count.push(user)})\r\n        // }))\r\n        // console.log(pastMessages)\r\n        // let newLike = newArr[i].count\r\n        // console.log(i,newArr[i].count,newArr,'before')\r\n        // if (newArr[i].count.includes(user)){\r\n        //     newArr[i].count.filter((currentUser)=>currentUser!==user)\r\n        // }else{\r\n            // newArr[i].count.push(user)\r\n        // }\r\n        // console.log(newArr[i].count,newArr,'during')\r\n        // newArr[i].count=newLike\r\n        // console.log(newLike,newArr,'after')\r\n        // newArr[i].assign()\r\n        // if (newArr[i].count.includes(user)){\r\n        //     newArr[i].count.filter((currentuser)=>currentuser!==user)\r\n            \r\n        // }else{\r\n            // newArr[i].count.Object.assign(user)\r\n        // }\r\n\r\n\r\n        if (!newArr[i].count.includes(user)){\r\n            let counting = [...newArr[i].count,user]\r\n            newArr[i]={...newArr[i],count:counting}\r\n            console.log(counting)\r\n            setPastMessages(newArr)\r\n        }else{\r\n            let counting = newArr[i].count.filter((currentuser)=>currentuser!==user)\r\n            newArr[i]={...newArr[i],count:counting}\r\n            // console.log(filteredArr)\r\n            setPastMessages(newArr)\r\n            \r\n        }\r\n        \r\n\r\n        \r\n        // console.log(newArr)\r\n        // setPastMessages((prevPastMessages)=>{\r\n            // return [...prevPastMessages,{PastMessages[i].count:PastMessages[i].count++}]\r\n    }\r\n\r\n    // componentDidUpdate=()=>{\r\n    //     fetch('http:localhost:3000/',{\r\n    //         method:'get',\r\n    //         headers:{'Content-type':'application/json'}\r\n    //     })\r\n    //     .then(res=>res.json())\r\n    //     .then(response=>console.log(response))\r\n    //     // .then(res=>res.forEach((text)=>{\r\n    //     //     <Messagebox user = {text.user} text ={text.text} currentTime = {text.currentTime} />\r\n   \r\n    //     // })\r\n    //     // )\r\n    //     .catch(err=>console.log(err))\r\n    //      }\r\n\r\n    // render(){\r\n        return(\r\n            <div className = \"maincomment\">\r\n            <div className = \"inputbox\">\r\n                <input className = \"textarea\" cols=\"40\" rows=\"6\" onChange = {onInputChange} value = {currentMessage.message}></input>\r\n                <button className = \"submitbutton\" onClick = {onSubmit}>Submit</button>\r\n            </div>\r\n            <div className=\"commentsection\">\r\n                <div className=\"filter\">\r\n                <label name=\"filter\" className = \"filterLabel\">Filter Messages</label>\r\n                <input name = \"filter\" ></input>\r\n                </div>\r\n                <div>\r\n                {pastMessages.map((msg,i)=>{\r\n                    const currentUser = pastMessages.length-1-i\r\n                    // console.log('current',pastMessages[currentUser])\r\n                    return <div><Messagebox pastMessages = {pastMessages} currentUser = {user} username = {pastMessages[currentUser].email} text ={pastMessages[currentUser].message} time = {pastMessages[currentUser].time} i = {currentUser} deletePost = {deletePost} route={route} addLike = {addLike} count = {pastMessages[currentUser].count}/></div>\r\n                \r\n                })}\r\n                </div>\r\n                {console.log('message',pastMessages)}\r\n                \r\n                {/* {pastMessages.map((message,i)=>{\r\n                    return <div id ={i} key ={i}>{pastMessages[pastMessages.length-i-1]}<button id = {i} onClick = {deletePost}>Delete</button></div>\r\n                })} */}\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n\r\n\r\nexport default Messages;","import React from 'react';\r\nimport Messagebox from '../Messages/Messagebox';\r\nimport './Mail.css';\r\n\r\nconst Mail = ({privateMessage, setPrivateMessage, privateMessages, setPrivateMessages, user,deletePost}) => {\r\n    const onChanges= (event) =>{\r\n        switch (event.target.id){\r\n            case 'recipientEmail':\r\n                setPrivateMessage((prevPrivateMessage)=>{\r\n                    return {...prevPrivateMessage,recipientEmail:event.target.value}\r\n                })\r\n                break;\r\n            case 'messageBody':\r\n                setPrivateMessage((prevPrivateMessage)=>{\r\n                    return {...prevPrivateMessage,message:event.target.value}\r\n                })\r\n                break;\r\n        }\r\n        // switch (event.target.id){\r\n        //   case 'Name':\r\n        //     setUser((prevUser)=>{\r\n        //         return {...prevUser,username:event.target.value}})\r\n        //     break;\r\n        //   case 'Email':\r\n        //     setUser((prevUser)=>{\r\n        //         return {...prevUser,email:event.target.value}})\r\n        //     break;\r\n        //   case 'Password':\r\n        //     setUser((prevUser)=>{\r\n        //         return {...prevUser,password:event.target.value}})\r\n        //     break;\r\n        //     default:\r\n        //         console.log(event.target.value)\r\n        // }\r\n      }\r\n\r\n      const onSend = () => {\r\n          setPrivateMessages((prevPrivateMessages)=>{\r\n              return [...prevPrivateMessages,privateMessage]\r\n          })\r\n          setPrivateMessage((prevPrivateMessage)=>{\r\n              return {...prevPrivateMessage,username:'',recipientEmail:'',message:'',time:''}})\r\n          console.log(privateMessages)\r\n      }\r\n\r\n      const deleteMail = (event) => {\r\n        const currentIndex = privateMessages.length-1-event.target.id\r\n        // console.log(pastMessages[currentIndex].email)\r\n        setPrivateMessages(privateMessages.filter((message)=>message!==privateMessages[currentIndex]))\r\n      }\r\n\r\n      const reply = (email) => {\r\n          console.log('reply',email)\r\n        setPrivateMessage((prevPrivateMessage)=>{\r\n            return {...prevPrivateMessage,recipientEmail:email}\r\n        })\r\n      }\r\n    return (\r\n        <div className = \"mailbox\">\r\n            <div>\r\n                <div>\r\n                <label name=\"to\">To</label>\r\n            <input name = \"to\" id=\"recipientEmail\" type = \"text\" placeholder = \"Enter email\" onChange = {onChanges} value = {privateMessage.recipientEmail}></input>\r\n                </div>\r\n            \r\n            <label name=\"body\">Message</label>\r\n            <textarea name = \"body\"  id = \"messageBody\" placeholder = \"Enter Message \" onChange = {onChanges} value = {privateMessage.message}></textarea>\r\n            <button type=\"submit\" onClick ={onSend}>Send</button>\r\n            </div>\r\n            \r\n            {privateMessages.map((message,i)=>{\r\n                    const currentMessage = privateMessages.length-1-i\r\n                    console.log(privateMessages[currentMessage].recipientEmail,user.email)\r\n                    if (privateMessages[currentMessage].recipientEmail === user.email){\r\n                        return <div><Messagebox username = {privateMessages[currentMessage].senderEmail} text ={privateMessages[currentMessage].message} time = {privateMessages[currentMessage].time} i = {i} deleteMail = {deleteMail} reply = {reply} /></div>\r\n                    }\r\n                    \r\n                })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Mail;","import React from 'react';\r\n\r\nconst Friend = ({friend,messageFriend}) => {\r\n    console.log(friend)\r\n    return(\r\n        <div>\r\n             <li onClick = {()=>messageFriend(friend)}>{friend}</li>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Friend;","import React from 'react';\r\nimport Friend from './Friend';\r\nimport './Friends.css';\r\n\r\nconst Friends = ({user,setUser,setPrivateMessage,setRoute}) => {\r\n    const messageFriend = (friend) => {\r\n        setPrivateMessage((prevPrivateMessage)=>{\r\n            return {...prevPrivateMessage,recipientEmail:friend}\r\n        })\r\n        setRoute('mail')\r\n\r\n        console.log('add')\r\n    }\r\n\r\n    const addFriend = () => {\r\n        const newFriend = prompt('Enter the email address of your friend ')\r\n        const newFriends = [...friends,newFriend]\r\n        setUser((prevUser)=> {\r\n            return {...prevUser,friends:newFriends}\r\n        })\r\n    }\r\n\r\n    const { friends } = user\r\n    return(\r\n        <div className=\"mainfriend\">\r\n            <div className=\"friendtitlebox\"><p className=\"friendtitle\">Friends List</p></div>\r\n        <div>\r\n            <ul>\r\n                {console.log(friends)}\r\n                {friends.map((friend)=>{\r\n                    return <Friend messageFriend = {messageFriend} friend = {friend} />\r\n                })}\r\n                {/* <Friend messageFriend = {messageFriend} /> */}\r\n                {/* <li onClick = {()=>messageFriend(friends[0])}>{friends}</li> */}\r\n                \r\n                \r\n            </ul>\r\n            \r\n        </div>\r\n        <button onClick = {addFriend}>Add Friend</button>\r\n        </div>\r\n        \r\n    )\r\n\r\n}\r\n\r\nexport default Friends;","import React, { useState, useEffect } from 'react';\nimport Login from './component/Login/Login';\nimport Navigation from './component/Navigation/Navigation';\nimport Messages from './component/Messages/Messages';\nimport Mail from './component/Mail/Mail';\nimport Friends from './component/Friends/Friends';\nimport './App.css';\nimport Picture from './component/Messages/Picture';\n\n\n\nfunction App() {\n  const [user,setUser] = useState({username:'',email:'',password:'',friends:['brian@gmail.com']})\n  const [route,setRoute] = useState('Sign In')\n  const [isSignedIn,setIsSignedIn] = useState(false)\n  const [errorMessage,setErrorMessage] = useState('')\n  // const [currentMessage,setCurrentMessage] = useState('')\n  // const [pastMessages,setPastMessages] = useState([])\n  const [pastMessages,setPastMessages] = useState([])\n  const [currentMessage, setCurrentMessage] = useState({username:'',email:'',message:'',time:'',count:[]})\n  const [privateMessages,setPrivateMessages] = useState([])\n  const [privateMessage, setPrivateMessage] = useState({username:'',senderEmail:'',recipientEmail:'',message:'',time:''})\n\n  \n \n\n  const resetState = () => {\n    console.log(user)\n    setRoute('Sign In')\n    setIsSignedIn(false)\n    setUser({username:'',email:'',password:'',friends:['brian@gmail.com']})\n    setErrorMessage('')\n    // console.log(pastMessages)\n    setCurrentMessage({username:'',email:'',message:'',time:'',count:[]})\n    setPrivateMessage({username:'',senderEmail:'',recipientEmail:'',message:'',time:''})\n    // console.log(pastMessages)\n  }\n\n  const onRouteChange = (route) => {\n    \n    (route === 'home' || route ==='mail')?setIsSignedIn(true):resetState();\n    setRoute(route)\n    // console.log(route)\n  }\n  \n  const deletePost = (currentIndex) => {\n    // const currentIndex = pastMessages.length-1-event.target.id\n    console.log(pastMessages[currentIndex].email)\n    if (pastMessages[currentIndex].email===user.email){\n      setPastMessages(pastMessages.filter((message)=>message!==pastMessages[currentIndex]))\n    }else{\n      alert('You can only delete your own messages')\n    }    \n  }\n\n  return (\n    <div className=\"App\">\n    <Navigation onRouteChange = {onRouteChange} isSignedIn = {isSignedIn} route={route}/>\n    \n     {isSignedIn\n      ? (route==='home'\n        ?\n        <div className = \"main\">\n        {/* {console.log(pastMessages)} */}\n        <Friends user = {user} setUser = {setUser} setRoute = {setRoute} setPrivateMessage = {setPrivateMessage}/>\n        <div className = \"mainMessage\">\n        <Messages \n            user = {user.email} \n            // setCurrentMessage = {setCurrentMessage} \n            // setPastMessages = {setPastMessages} \n            route = {route}\n            deletePost = {deletePost}\n            currentMessage = {currentMessage}\n            setCurrentMessage = {setCurrentMessage}\n            pastMessages = {pastMessages}\n            setPastMessages = {setPastMessages}\n            />\n            </div>\n        </div>\n        :\n        <div className = \"main\">\n        <Friends user = {user} setUser = {setUser} setRoute = {setRoute} setPrivateMessage = {setPrivateMessage}/>\n        <div className = \"mainMessage\">\n        <Mail user ={user} privateMessage = {privateMessage} setPrivateMessage = {setPrivateMessage} privateMessages = {privateMessages} setPrivateMessages = {setPrivateMessages} deletePost = {deletePost} />\n        </div>\n        </div>)\n      :(\n        <>\n        {/* {console.log(pastMessages)} */}\n        <Login \n            user = {user}\n            route = {route} \n            errorMessage = {errorMessage}\n            setUser = {setUser}\n            setRoute = {setRoute}\n            setErrorMessage = {setErrorMessage}\n            setIsSignedIn = {setIsSignedIn}\n            onRouteChange = {onRouteChange}\n            // currentMessage = {currentMessage}\n            setCurrentMessage = {setCurrentMessage}\n            pastMessages = {pastMessages}\n            setPrivateMessage = {setPrivateMessage}\n            // setPastMessages = {setPastMessages}\n            />          \n        </>\n        )\n    }\n    \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}